import java.util.ArrayList;

public class SortedWordList {

	private ArrayList<String> sorta;

	public SortedWordList(){						//done
		sorta = new ArrayList<>();
	}

	public SortedWordList(int x){					//done
		sorta = new ArrayList<>(x);
	}

	public int indexOf(String word){
		word.toLowerCase();
		int begin=0, end = sorta.size()-1, index=-1;
		boolean b = true;
		while(b){
			int temp = (begin+end)/2;
			
			for(int i=begin; i<=temp; i++){
				if(word.equals(sorta.get(i))){
					index=i;
					b=false;
				}
			}
			begin = temp;
			if(temp >= end || begin >= end)
				break;
		}
		return index;
	}

	public boolean contains(String word){
		word.toLowerCase();
		if(sorta.size()==0)
			return false;
		int begin=0, end = sorta.size()-1, index=-1;
		boolean b = true;
		while(b){
			int temp = (begin+end)/2;
			
			for(int i=begin; i<=temp; i++){
				if(word.equals(sorta.get(i))){
					return true;
				}
			}
			begin = temp;
			if(temp >= end || begin >= end)
				break;
		}
		return false;
	}

	public String set(int i, String word){
		word.toLowerCase();
		if((word.compareTo(sorta.get(i-1)) > 0) && !(word.equals(sorta.get(i-1))))
			if((word.compareTo(sorta.get(i+1)) < 0) && !(word.equals(sorta.get(i+1))))
				sorta.set(i, word);
		throw new IllegalArgumentException("word="+word+" i="+i);
	}

	public void add(int i, String word){
		word.toLowerCase();
		if((word.compareTo(sorta.get(i-1)) > 0) && !(word.equals(sorta.get(i-1))))
			if((word.compareTo(sorta.get(i)) < 0) && !(word.equals(sorta.get(i))))
				sorta.add(i, word);
		throw new IllegalArgumentException("word="+word+" i="+i);
	}

	public boolean add(String word){
		word.toLowerCase();
		if(contains(word))
			return false;
		if(sorta.size()==0)
			sorta.add(word);
		int begin=0;
		while(sorta.get(begin).compareTo(word)<0){
			begin++;
		}
		sorta.add(begin, word);
		/*boolean b = true;
		if(end==-1){
			sorta.add(word);
			return true;
		}
		while(b){
			int temp = (begin+end)/2;
			
			for(int i=begin; i<=temp; i++){
				if((word.compareTo(sorta.get(i-1)) > 0) && (word.compareTo(sorta.get(i)) < 0)){
					sorta.add(i, word);
					b=false;
				}
			}
			begin = temp;
			if(temp >= end || begin >= end){
				sorta.add(word);
				break;
			}
		}*/
		return true;
	}

}
